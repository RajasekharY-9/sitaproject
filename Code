public interface UserService {
    void addUser(UserRequestDTO request);
    List<UserRequestDTO> getAllUsers();
}
------------------------------------------

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

@Repository
public class UserRepositoryImpl {

    private final JdbcTemplate jdbcTemplate;

    @Autowired
    public UserRepositoryImpl(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    public void save(User user) {
        String sql = "INSERT INTO User (User_Pk_Id, User_Id, Direction_Id, Direction_Cycle, Company_Code) VALUES (?, ?, ?, ?, ?)";
        jdbcTemplate.update(sql, user.getUserPkId(), user.getUserId(),
                user.getDirectionId(), user.getDirectionCycle(), user.getCompanyCode());
    }
}
 

  
==========================================================
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.UUID;

@Service
public class UserServiceImpl implements UserService {

    private final UserRepositoryImpl userRepository;

    @Autowired
    public UserServiceImpl(UserRepositoryImpl userRepository) {
        this.userRepository = userRepository;
    }

    @Override
    public void addUser(UserRequestDTO request) {
        validateRequest(request);

        for (DirectionDTO direction : request.getDirections()) {
            User user = new User();
            user.setUserPkId(UUID.randomUUID().toString());
            user.setUserId(request.getUserId());
            user.setDirectionId(direction.getDirectionId());
            user.setDirectionCycle(direction.getDirectionCycle());
            user.setCompanyCode(direction.getCompanyCode());

            userRepository.save(user);
        }
    }

    @Override
    public List<UserRequestDTO> getAllUsers() {
        // Implement method to fetch all users using JDBC
        return null;
    }

    private void validateRequest(UserRequestDTO request) {
        // Validation logic goes here
    }
}

============================================
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
public class UserController {

    private final UserService userService;

    @Autowired
    public UserController(UserService userService) {
        this.userService = userService;
    }

    @PostMapping("/users")
    public ResponseEntity<String> addUser(@RequestBody UserRequestDTO request) {
        userService.addUser(request);
        return ResponseEntity.ok("Users added successfully");
    }

    @GetMapping("/users")
    public ResponseEntity<List<UserRequestDTO>> getAllUsers() {
        // Implement method to fetch all users using UserService
        return null;
    }
}

=============================================================================
import javax.persistence.*;

@Entity
@Table(name = "User")
public class User {

    @Id
    @Column(name = "User_Pk_Id")
    private String userPkId;

    @Column(name = "User_Id")
    private String userId;

    @Column(name = "Direction_Id")
    private String directionId;

    @Column(name = "Direction_Cycle")
    private String directionCycle;

    @Column(name = "Company_Code")
    private String companyCode;

    // Constructors, Getters, Setters
}
